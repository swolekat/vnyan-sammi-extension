[extension_name]
VNyan Sammi Extension

[extension_info]
version 2.0.3 by Swolekat
[insert_external]

[insert_command]
SAMMI.extCommand("VNyan Message", color = 3355443, height = 52,
  {
    commandName: ["Command Name", 14, "", null, []],
    port: ["WS Port", 14, "8000", null, []],
  }
);
SAMMI.extCommand('VNyan Websocket Trigger', 3355443, 52, {
  type: ['Type', 19, 'Open Connection', null, ['Open Connection', 'Close Connection']],
});
startListening();
[insert_hook]
case "VNyan Message":{
  sendMessage(SAMMIJSON);
} break
[insert_script]
const reconnectIntervalTime = 2000;
let listeningWebsocket = {};
let listeningWebsocketReconnectTimeout;


const portToSockets = {};
const portToQueues = {};

function getUrlFromPort(port){
    return `ws://localhost:${port}/vnyan`;
}

function deleteSocketAndRetry(port){
    SAMMI.alert('VNyan: Disconnected, reconnecting in 5 seconds');
    delete portToSockets[port];
    setTimeout(function(){ openSocket(port); }, 5000);
}

function openSocket(port) {
    let socket = portToSockets[port];
    if(!socket || socket.readyState === 3){
       socket = new WebSocket(getUrlFromPort(port));
       portToSockets[port] = socket;

       socket.onopen = function(event){
         SAMMI.alert(`VNyan connected on ${port}`);
         const queue = portToQueues[port];
         queue.forEach(function(command){
            socket.send(command);
         });
         portToQueues[port] = [];
       };

       socket.onclose = function() {
         deleteSocketAndRetry(port);
       };
    }
    if(socket.readyState !== 2){
        return;
    }
    // 2 means it's closing. Delete and try to reopen
    deleteSocketAndRetry(port);
}

function sendMessage(json) {
  const port = json.port;
  const commandName = json.commandName;
  const socket = portToSockets[port];
  if(!socket || socket.readyState !== 1){
    portToQueues[port] = [...(portToQueues[port] || []), commandName];
    openSocket(port);
    return;
  }
  socket.send(commandName);
}

function listenToVnyan() {
    if (listeningWebsocket.readyState === 1) {
      SAMMI.alert('Vnyan Listening connection already opened!');
      return;
    }
    listeningWebsocket = new WebSocket(`ws://127.0.0.1:8003`);
    listeningWebsocket.onopen = () => {
      clearTimeout(listeningWebsocketReconnectTimeout);
      SAMMI.alert('VNyan Listening connection opened!');
    };

    listeningWebsocket.onclose = () => {
      listeningWebsocketReconnectTimeout = setTimeout(() => {
        SAMMI.alert('VNyan Listening connection closed. Trying to Reconnect');
        listenToVnyan();
      }, 5000);
    };

    listeningWebsocket.onerror = (error) => {
      try {
        listeningWebsocket.close();
      } catch (e) {
        SAMMI.alert(`${e}`);
        console.log(`VNyan Error: ${e}`);
      }
    };

    listeningWebsocket.onmessage = (payload) => {
        let message = payload.data;
        // todo maybe json will be passed in a future version
        // try {
        //     message = JSON.parse(message);
        // } catch (e) {}
        const trigger = `VNyan ${message}`;
        SAMMI.triggerExt(trigger);
    };
}

function startListening(){
      lioranboardclient.on('VNyan Websocket Trigger', (payload) => {
          const data = payload.Data;
          if (data.type === 'Open Connection') {
            listenToVnyan();
            return;
          }
          try {
              clearTimeout(wsTimer);
              listeningWebsocket.onclose = () => {};
              listeningWebsocket.close();
              listeningWebsocket = null;
            } catch (e) {}
      });
}
[insert_over]
{ "deck_data": "{ \"background_color\": 4210752.0, \"on\": true, \"grid_y\": 10.0, \"snap_grid\": 1.0, \"lb_version\": \"2022.3.2 CE\", \"background_image\": \"\", \"sammi_version\": \"2022.3.2 CE\", \"encrypted\": false, \"adaptive_resizing\": 1.0, \"unique_id\": \"20221209133143266983733\", \"button_list\": [ { \"color\": 192.0, \"persistent\": 0.0, \"text\": \"INIT\\n(run ONCE)\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"VNyan SAMMI Extension-- Making the Folder\" }, { \"cmd\": 135.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"mkdir vnyan-sammi-extension\" }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 5000.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"VNyan SAMMI Extension-- Downloading the code\" }, { \"cmd\": 135.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 5000.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"curl -L -o vnyan-sammi-extension\\\\code.zip https:\\\/\\\/github.com\\\/swolekat\\\/vnyan-sammi-extension\\\/archive\\\/refs\\\/heads\\\/main.zip\" }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 35000.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"VNyan SAMMI Extension-- Unzipping the code\" }, { \"cmd\": 135.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 35000.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"tar -xf vnyan-sammi-extension\\\\code.zip -C \\\/$global.main_directory$\\\/vnyan-sammi-extension\" }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 65000.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"VNyan SAMMI Extension-- Installing Dependencies\" }, { \"cmd\": 135.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 65000.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"npm i --prefix vnyan-sammi-extension\\\/vnyan-sammi-extension-main\" }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 8.0, \"vis\": 1.0, \"ms\": 95000.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"VNyan SAMMI Extension Installation done\" } ], \"press_type\": 0.0, \"x\": 0.0, \"border\": 8.0, \"image\": \"\", \"triggers\": [ { \"case_sensitive\": 0.0, \"message\": \"SWOLEPRINT_INIT\", \"group_id\": \"\", \"button_id\": \"vnyanInit\", \"trg\": 12.0, \"allow_empty_wildcard\": 0.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 13.0, \"width\": 0.5, \"button_id\": \"vnyanInit\", \"button_duration\": 95000.0, \"y\": 0.0, \"switch_deck\": \"\", \"height\": 0.5, \"release_list\": [ ], \"functions\": 17.0, \"stretch\": 0.0 }, { \"color\": 12632256.0, \"persistent\": 1.0, \"text\": \"Startup\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 0.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"extcmd\": \"VNyan Websocket Trigger\", \"type\": \"Open Connection\", \"ext\": \"SAMMI Bridge\" }, { \"cmd\": 135.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"node \\\/$global.main_directory$\\\/vnyan-sammi-extension\\\/vnyan-sammi-extension-main\\\/websocket-proxy.js\" } ], \"press_type\": 0.0, \"x\": 0.5, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"group_id\": \"\", \"type\": \"SAMMI Bridge Connected\", \"button_id\": \"vnyanStartup\", \"trg\": 10.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 13.0, \"width\": 0.5, \"button_id\": \"vnyanStartup\", \"button_duration\": 0.0, \"y\": 0.0, \"switch_deck\": \"\", \"height\": 0.5, \"release_list\": [ ], \"functions\": 81.0, \"stretch\": 0.0 } ], \"deck_name\": \"VNyan Sammi Extension\", \"grid_x\": 10.0, \"stretch\": 0.0 }", "unique_id": "20221209133143266983733", "deck_verification_code": "84f40c2614665d5287737c41bd8f8052edb5e1ab", "include_image": { } }